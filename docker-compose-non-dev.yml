#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
x-superset-image: &superset-image apache/superset:${TAG:-latest-dev}
x-superset-depends-on: &superset-depends-on
  - db
  - redis
x-superset-volumes: &superset-volumes
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./docker:/app/docker
  - superset_home:/app/superset_home

version: "3.7"
services:
  redis:
    image: redis:latest
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data

  db:
    env_file: docker/.env-non-dev
    image: postgres:10
    container_name: superset_db
    restart: unless-stopped
    volumes:
      - db_home:/var/lib/postgresql/data

  superset:
    env_file: docker/.env-non-dev
    image: *superset-image
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    # ports:
    #   - 8088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-init:
    image: *superset-image
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file: docker/.env-non-dev
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

  postgres:
    image: medicmobile/cht-postgres:release-postgres13-rc.1
    environment:

      POSTGRES_DB: ${POSTGRES_DB_NAME:-cht}
      POSTGRES_USER: ${POSTGRES_USER_NAME:-postgres_root}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres_root_password}

      COUCH2PG_USER: ${COUCH2PG_USER:-cht_couch2pg}
      COUCH2PG_USER_PASSWORD: ${COUCH2PG_USER_PASSWORD:-cht_couch2pg_password}
      DB_OWNER_GROUP: ${DB_OWNER_GROUP:-cht_analytics}
    volumes:
      - cht-postgres-data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT:-5432}:5432

  cht-couch2pg:
    image: medicmobile/cht-couch2pg:main-node-10
    environment:
      COUCHDB_URL: ${COUCHDB_URL:-https://medic:password@cht.openelis-global.org/medic}

      POSTGRES_USER_NAME: ${COUCH2PG_USER:-cht_couch2pg}
      POSTGRES_PASSWORD: ${COUCH2PG_USER_PASSWORD:-cht_couch2pg_password}
      POSTGRES_SERVER_NAME: ${POSTGRES_SERVER_NAME:-postgres}
      POSTGRES_DB_NAME: ${POSTGRES_DB_NAME:-cht}

      COUCH2PG_CHANGES_LIMIT: ${COUCH2PG_CHANGES_LIMIT:-100}
      COUCH2PG_SLEEP_MINS: ${COUCH2PG_SLEEP_MINS:-60}
      COUCH2PG_DOC_LIMIT: ${COUCH2PG_DOC_LIMIT:-1000}
      COUCH2PG_RETRY_COUNT: ${COUCH2PG_RETRY_COUNT:-5}
    depends_on:
      - postgres

  nginx-superset:
    image: nginx:latest
    container_name: nginx-superset
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl/openelisci.crt:/etc/nginx/serverCerts/openelisci.crt
      - ./ssl/openelisci.key:/etc/nginx/serverCerts/openelisci.key    

volumes:
  superset_home:
    external: false
  db_home:
    external: false
  redis:
    external: false
  cht-postgres-data:
    external: false
